package main

import "fmt"

func main() {
    // 1. 定义一个长度为5的整型数组，并将其初始化为一组不同的数字

    // 2. 创建一个map，将字符串作为key，整数作为value，并初始化其中一些键值对

    // 3. 使用for循环打印出1到10之间的所有偶数

    // 4. 实现一个函数，接受一个整数作为参数，并返回一个字符串。如果参数大于10，返回"大于10"，否则返回"不大于10"

    // 5. 定义一个结构体类型，表示一个人的信息，包括姓名、年龄和性别。创建一个结构体变量，并初始化其中的字段。

    // 6. 实现一个递归函数，计算斐波那契数列的第n个数（斐波那契数列以0和1开始，后面的每一项是前两项的和）

    // 7. 使用goroutine并发执行两个函数，一个函数打印数字1到50的奇数，另一个函数打印数字1到50的偶数

    // 8. 使用defer关键字，在函数结束前打印一条消息

    // 9. 将一个字符串转换为字节切片，并反转字节切片中的元素顺序

    // 10. 实现一个自定义的错误类型，并在函数中返回该错误类型的值
}